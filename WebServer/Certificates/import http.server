import http.server
import base64

# Define a custom handler that supports basic authentication
class BasicAuthHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        # Check for basic authentication credentials
        auth_header = self.headers.get('Authorization')
        if auth_header is None or not auth_header.startswith('Basic '):
            self.send_response(401)
            self.send_header('WWW-Authenticate', 'Basic realm="Secure Area"')
            self.end_headers()
            return

        # Extract and decode credentials
        credentials = base64.b64decode(auth_header.split(' ')[1]).decode('utf-8')
        username, password = credentials.split(':', 1)

        # Verify the credentials (replace with your own logic)
        if username == 'user' and password == 'password':
            # Call the parent class to handle the request
            super().do_GET()
        else:
            self.send_response(401)
            self.send_header('WWW-Authenticate', 'Basic realm="Secure Area"')
            self.end_headers()

# Run the server
if __name__ == '__main__':
    http.server.test(HandlerClass=BasicAuthHandler)
